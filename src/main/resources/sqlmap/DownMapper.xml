<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhiqu.mapper.DownMapper" >
  <resultMap id="BaseResultMap" type="com.zhiqu.model.Down" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="fl" property="fl" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="sm" property="sm" jdbcType="VARCHAR" />
    <result column="sj" property="sj" jdbcType="VARCHAR" />
    <result column="fbr" property="fbr" jdbcType="VARCHAR" />
    <result column="sh" property="sh" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, fl, pic, sm, sj, fbr, sh
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from down
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findAllFiles" resultMap="BaseResultMap" >
  	select * from down where sh = '已审核'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from down
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhiqu.model.Down" >
    insert into down (id, title, fl, 
      pic, sm, sj, fbr, 
      sh)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{fl,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{sm,jdbcType=VARCHAR}, #{sj,jdbcType=VARCHAR}, #{fbr,jdbcType=VARCHAR}, 
      #{sh,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhiqu.model.Down" >
    insert into down
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="fl != null" >
        fl,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="sm != null" >
        sm,
      </if>
      <if test="sj != null" >
        sj,
      </if>
      <if test="fbr != null" >
        fbr,
      </if>
      <if test="sh != null" >
        sh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="fl != null" >
        #{fl,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="sm != null" >
        #{sm,jdbcType=VARCHAR},
      </if>
      <if test="sj != null" >
        #{sj,jdbcType=VARCHAR},
      </if>
      <if test="fbr != null" >
        #{fbr,jdbcType=VARCHAR},
      </if>
      <if test="sh != null" >
        #{sh,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhiqu.model.Down" >
    update down
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="fl != null" >
        fl = #{fl,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="sm != null" >
        sm = #{sm,jdbcType=VARCHAR},
      </if>
      <if test="sj != null" >
        sj = #{sj,jdbcType=VARCHAR},
      </if>
      <if test="fbr != null" >
        fbr = #{fbr,jdbcType=VARCHAR},
      </if>
      <if test="sh != null" >
        sh = #{sh,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhiqu.model.Down" >
    update down
    set title = #{title,jdbcType=VARCHAR},
      fl = #{fl,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      sm = #{sm,jdbcType=VARCHAR},
      sj = #{sj,jdbcType=VARCHAR},
      fbr = #{fbr,jdbcType=VARCHAR},
      sh = #{sh,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>